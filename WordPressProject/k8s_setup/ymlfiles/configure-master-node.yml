- name: k8s master configuration
  hosts: [k8smaster]
  become: yes
  gather_facts: no
 
  tasks:
  - name: setting up key to access server directly from local
    authorized_key:
     user: ubuntu
     state: present
     key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"

  - name: Add Docker's official GPG key
    apt_key:
     url: https://download.docker.com/linux/ubuntu/gpg
     state: present

  - name: Add stable docker repo
    apt_repository:
     repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
     state: present

  - name: Add k8s key value
    apt_key:
     url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
     state: present

  - name: Add k8s stable repo
    apt_repository:
     repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
     filename: /etc/apt/sources.list.d/kubernetes.list
     state: present
  
  - name: Add helm key
    apt_key:
     url: https://baltocdn.com/helm/signing.asc
     state: present
 
  - name: Add helm stable repo
    apt_repository:
     repo: deb https://baltocdn.com/helm/stable/debian/ all main
     filename: /etc/apt/sources.list.d/helm-stable-debian.list
     state: present

  - name: Update Cache
    apt:
     update_cache: yes

  - name: Enable iptables bridge call
    shell: echo "net.bridge.bridge-nf-call-iptables=1" | tee /etc/sysctl.d/k8s.conf && sysctl -p
    register: result

  - name: load sysctl to load bridge configuration
    shell: sysctl --system

  - name: update cache again
    apt:
     update_cache: yes

  - name: install required packages
    apt: name={{ item }} state=present
    loop: ["apt-transport-https", "ca-certificates", "curl" ]

  - name: install docker helm and k8s 
    apt: name={{ item }} state=present
    loop: ["docker-ce", "helm", "kubelet", "kubeadm", "kubectl"]

  - name: Mark hold of updates for kubectl kubeadm and kubelet
    dpkg_selections: name={{ item }} selection=hold 
    loop: [ 'docker-ce', 'kubelet', 'kubeadm', 'kubectl' ]
  
  - name: Update Docker Network from cgroupfs to systemd
    copy:
     src: systemd.conf
     dest: /etc/docker/daemon.json

  - name: Restart Docker 
    shell: systemctl restart docker

  - name: Initialize the cluster on master node
    shell: kubeadm init 
    register: result

  - debug: msg={{ result.stdout }}

  - name: Create a .kube folder
    file: path=$HOME/.kube state=directory
    become_user: ubuntu

  - name: Copy k8s config files to kube folder
    shell: sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config && sudo chown $(id -u):$(id -g) $HOME/.kube/config
    become_user: ubuntu

  - name: Install weave network
    become: false
    shell: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

  - pause:
      seconds: 30

  - name: Check the nodes
    shell: kubectl get nodes
    register: nodes
    become: false

  - debug: msg={{ nodes.stdout }}
